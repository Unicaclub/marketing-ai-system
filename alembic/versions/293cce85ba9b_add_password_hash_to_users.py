"""add password_hash to users

Revision ID: 293cce85ba9b
Revises: 
Create Date: 2025-08-02 02:26:16.670203

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '293cce85ba9b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Adiciona a coluna password_hash na tabela users, se nÃ£o existir
    with op.batch_alter_table('users') as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=128), nullable=True))


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversation_flows',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('trigger_conditions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('flow_steps', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('success_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('average_completion_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['mcp_agents.id'], name=op.f('conversation_flows_agent_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('conversation_flows_pkey'))
    )
    op.create_table('sales_agent_products',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['sales_agents.id'], name=op.f('sales_agent_products_agent_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['product_databases.id'], name=op.f('sales_agent_products_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('sales_agent_products_pkey'))
    )
    op.create_table('sales_agents',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sales_agents_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='sales_agents_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sales_agents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('campaigns',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('campaigns_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('objective', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('platforms', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('target_audience', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('budget_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('budget_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('budget_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content_headline', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_cta', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_media', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sales_strategy', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('product_database_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reach', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('roi', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('spent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ctr', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_database_id'], ['product_databases.id'], name='campaigns_product_database_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='campaigns_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='campaigns_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='users_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('agent_knowledge',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('effectiveness_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['mcp_agents.id'], name=op.f('agent_knowledge_agent_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('agent_knowledge_pkey'))
    )
    op.create_table('mcp_agents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('personality', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sales_approach', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('supported_platforms', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('system_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_interactions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('successful_conversions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('average_response_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('customer_satisfaction', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_learning', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('mcp_agents_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('mcp_agents_pkey'))
    )
    op.create_table('product_databases',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_databases_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('products', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='product_databases_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_databases_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('api_key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_api_keys_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_api_keys_pkey'))
    )
    op.create_table('sales_agent_platforms',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('platform', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['sales_agents.id'], name=op.f('sales_agent_platforms_agent_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('sales_agent_platforms_pkey'))
    )
    op.create_table('sales_interactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('campaign_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('platform', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('customer_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('customer_phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('customer_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('interaction_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('message_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ai_response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sentiment', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('stage', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('product_interest', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('conversion_probability', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('deal_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], name=op.f('sales_interactions_campaign_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('sales_interactions_pkey'))
    )
    # ### end Alembic commands ###
